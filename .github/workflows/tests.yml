name: tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  setup_mongodb:
    name: MongoDB Setup
    runs-on: ubuntu-latest

    env:
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: MongoDB Setup
        run: |
          docker run -d --rm --name mongodb -p $DB_PORT:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=$DB_USERNAME \
            -e MONGO_INITDB_ROOT_PASSWORD=$DB_PASSWORD \
            mongo:latest
          echo "Waiting for MongoDB to start"
          sleep 10
          docker ps -a

          # Create database and user
          docker exec mongodb mongo admin --eval "db.createUser({user: '$DB_USERNAME', pwd: '$DB_PASSWORD', roles: ['readWrite']})"
          docker exec mongodb mongo $DB_NAME --eval "db.createUser({user: '$DB_USERNAME', pwd: '$DB_PASSWORD', roles: ['readWrite']})"

  test:
    name: Run Tests
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]
        python-version: [ '3.10', '3.11', '3.12' ]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 20

    env:
      DB_HOST: localhost
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      PAT: ${{ secrets.PAT }}

    needs: setup_mongodb 

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install flake8 pytest

      - name: Lint with flake8
        run: |
          cd backend/
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          cd backend/
          python -m pytest
